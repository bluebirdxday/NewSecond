<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="shopMapper">

	<resultMap type="Shop" id="shop_rm">
		<id property="userNo" column="USER_NO" />
		
		<result property="shopTitle" column="SHOP_TITLE" />
		<result property="shopInfo" column="SHOP_INFO" />
		<result property="sellCount" column="SELL_COUNT" />
		<result property="shopProfile" column="SHOP_PROFILE"/>
		
		<collection property="reviewList" select="selectReviewList"
			column="USER_NO" javaType="java.util.ArrayList" ofType="Review"/>
	</resultMap>
	
	
	<resultMap type="Review" id="review_rm">
		<id property="reviewNo" column="REVIEW_NO"/>
		<result property="userNo" column="USER_NO"/>
		<result property="goodsNo" column="GOODS_NO"/>
		<result property="shopTitle" column="SHOP_TITLE"/>
		<result property="goodsTitle" column="GOODS_TITLE"/>
		<result property="reviewMessage" column="REVIEW_MESSAGE"/>
		<result property="reviewDate" column="REVIEW_DT"/>
		<result property="reviewStars" column="REVIEW_STARS"/>
		
	</resultMap>
	

	<!-- 상점 정보 -->
	<select id="selectShopInfo" parameterType="int" resultMap="shop_rm" >
		SELECT USER_NO, SHOP_TITLE, 
						(SELECT COUNT(*)
							FROM "goods_board"
							WHERE GOODS_STATUS = 'E'
							AND USER_NO = #{userNo}) SELL_COUNT,
				NVL(SHOP_INFO, SHOP_TITLE||' 상점에 오신 것을 환영합니다!') SHOP_INFO, 
				NVL(SHOP_PROFILE, '/resources/src/img/basic_profile.png') SHOP_PROFILE
		FROM "shop"
		WHERE USER_NO = #{userNo}
	</select>
	
	
	<!-- 오픈일 계산 -->
	<select id="selectShopOpenDay" resultType="_int">
		SELECT TRUNC(SYSDATE-ENROLL_DT) OPEN_DAY
		FROM "users"
		WHERE USER_NO = #{userNo}
	</select>
	
	
	<!-- 상점 편집 -->
	<update id="updateShopInfo">
		UPDATE "shop"
		SET SHOP_INFO = #{shopInfo}, SHOP_TITLE = #{shopTitle}, SHOP_PROFILE = #{shopProfile}
		WHERE USER_NO = #{userNo}
	</update>
	
	
	<!-- 특정 유저(상점)의 거래 후기 목록 조회 (받은 후기)-->
	<select id="selectReviewList" resultMap="review_rm">
		SELECT REVIEW_NO, SHOP_TITLE, GOODS_TITLE, REVIEW_MESSAGE,
		REVIEW_DT, REVIEW_STARS, NVL(SHOP_PROFILE, '/resources/src/img/basic_profile.png') SHOP_PROFILE
		FROM "reviews" R
		JOIN "shop" USING(USER_NO)
		JOIN "goods_board" B USING(GOODS_NO)
		WHERE REVIEW_DEL_FL = 'N'
		AND B.USER_NO = #{userNo}
	</select>
	
	
	<!-- 특정 유저의 거래 후기 목록 조회 (쓴 후기) -->
	<select id="selectWrittenReviewList" resultMap="review_rm">
		SELECT REVIEW_NO, GOODS_NO, GOODS_TITLE, REVIEW_MESSAGE, REVIEW_DT, REVIEW_STARS
		FROM "reviews" R
		JOIN "goods_board" GB USING(GOODS_NO)
		WHERE REVIEW_DEL_FL = 'N'
		AND R.USER_NO = #{userNo}
	</select>
	
	
	<!-- 아직 작성되지 않은(작성 가능한) 후기 목록 조회 (쓸 후기)-->
	<select id="selectCanWriteReviewList" resultType="java.util.HashMap">
		SELECT tl.GOODS_NO GOODS_NO, GOODS_TITLE
		FROM "transaction_list" tl
		JOIN "goods_board" gb ON(tl.GOODS_NO=gb.GOODS_NO)
		WHERE tl.USER_NO = #{userNo}
		AND gb.GOODS_NO NOT IN(
				SELECT GOODS_NO FROM "reviews" WHERE USER_NO=#{userNo} AND REVIEW_DEL_FL='N')
	</select>
	
	<!-- 리뷰 작성 -->
	<insert id="insertReview">
		INSERT INTO "reviews" VALUES(SEQ_REVIEWS_NO.NEXTVAL, #{userNo}, #{goodsNo}, 
						#{reviewMessage}, DEFAULT,	#{reviewStars}, DEFAULT)
	</insert>
	
	
	<!-- 리뷰 삭제 -->
	<update id="deleteReview">
		UPDATE "reviews"
		SET REVIEW_DEL_FL = 'Y'
		WHERE REVIEW_NO = #{reviewNo}
	</update>
	
	
	<!-- 리뷰 조회 -->
	<select id="selectReview" resultMap="review_rm">
		SELECT REVIEW_NO, r.USER_NO USER_NO, GOODS_TITLE, GOODS_NO, REVIEW_MESSAGE, REVIEW_DT, REVIEW_STARS
		FROM "reviews" r
		JOIN "goods_board" gb USING(GOODS_NO)
		WHERE REVIEW_NO = #{reviewNo}
	</select>
	
	
	<!-- 리뷰 수정 -->
	<update id="updateReview">
		UPDATE "reviews" SET REVIEW_MESSAGE = #{reviewMessage}, REVIEW_STARS = #{reviewStars}
		WHERE REVIEW_NO = #{reviewNo}
	</update>
	
	
	<!-- 후기 작성 시 알림을 위한 리뷰 정보 조회 -->
	<select id="selectReivewByGoodsNo" resultMap="review_rm">
	SELECT * FROM "reviews"
	WHERE GOODS_NO = ${goodsNo}
	</select>
		
</mapper>
