-- 특정 유저 상점 조회
SELECT USER_NO, SHOP_TITLE, 
		(SELECT COUNT(*)
		FROM "goods_board"
		WHERE GOODS_STATUS = 'E'
		AND USER_NO = 1) SELL_COUNT,
	NVL(SHOP_INFO, SHOP_TITLE||' 상점에 오신 것을 환영합니다!') SHOP_INFO, 
	NVL(SHOP_PROFILE, '/resources/src/img/basic_profile.png') SHOP_PROFILE
FROM "shop"
WHERE USER_NO = 5;



-- 특정 유저 게시글 목록 조회(최신순)
SELECT USER_NO, CATEGORY_NO, GOODS_TITLE, GOODS_DESCR, GOODS_PRICE, 
		VIEW_COUNT, WISH_COUNT, GOODS_STATUS,
    CASE
        WHEN SYSDATE - SELL_ENROLL_DT < 1/24/60 THEN FLOOR((SYSDATE - SELL_ENROLL_DT) * 24 * 60 * 60) || '초 전'
        WHEN SYSDATE - SELL_ENROLL_DT < 1/24 THEN FLOOR((SYSDATE - SELL_ENROLL_DT) * 24 * 60) || '분 전'
        WHEN SYSDATE - SELL_ENROLL_DT < 1 THEN FLOOR((SYSDATE - SELL_ENROLL_DT) * 24) || '시간 전'
        WHEN SYSDATE - SELL_ENROLL_DT < 30 THEN FLOOR(SYSDATE - SELL_ENROLL_DT) || '일 전'
        WHEN SYSDATE - SELL_ENROLL_DT < 365 THEN FLOOR((SYSDATE - SELL_ENROLL_DT) / 30) || '달 전'
        ELSE FLOOR((SYSDATE - SELL_ENROLL_DT) / 365) || '년 전'
    END SELL_ENROLL_DT, THUMBNAIL
FROM (SELECT USER_NO, CATEGORY_NO, GOODS_TITLE, GOODS_DESCR, GOODS_PRICE, 
		VIEW_COUNT, WISH_COUNT, GOODS_STATUS, SELL_ENROLL_DT, 
		NVL((SELECT FILE_PATH||USER_NO||'/'||FILE_NAME FROM "files" F
			WHERE F.GOODS_NO = G.GOODS_NO
			AND FILE_ORDER = 1), '/resources/src/img/basic_profile.png') THUMBNAIL 
		FROM "goods_board" G
		WHERE USER_NO = 1
		AND GOODS_STATUS NOT IN('D', 'B')
		ORDER BY GOODS_STATUS, SELL_ENROLL_DT DESC);

	
-- 특정 유저 게시글 목록 조회(인기순)
SELECT USER_NO, CATEGORY_NO, GOODS_TITLE, GOODS_DESCR, GOODS_PRICE, 
		VIEW_COUNT, WISH_COUNT, GOODS_STATUS,
    CASE
        WHEN SYSDATE - SELL_ENROLL_DT < 1/24/60 THEN FLOOR((SYSDATE - SELL_ENROLL_DT) * 24 * 60 * 60) || '초 전'
        WHEN SYSDATE - SELL_ENROLL_DT < 1/24 THEN FLOOR((SYSDATE - SELL_ENROLL_DT) * 24 * 60) || '분 전'
        WHEN SYSDATE - SELL_ENROLL_DT < 1 THEN FLOOR((SYSDATE - SELL_ENROLL_DT) * 24) || '시간 전'
        WHEN SYSDATE - SELL_ENROLL_DT < 30 THEN FLOOR(SYSDATE - SELL_ENROLL_DT) || '일 전'
        WHEN SYSDATE - SELL_ENROLL_DT < 365 THEN FLOOR((SYSDATE - SELL_ENROLL_DT) / 30) || '달 전'
        ELSE FLOOR((SYSDATE - SELL_ENROLL_DT) / 365) || '년 전'
    END SELL_ENROLL_DT, THUMBNAIL
FROM (SELECT USER_NO, CATEGORY_NO, GOODS_TITLE, GOODS_DESCR, GOODS_PRICE, 
		VIEW_COUNT, WISH_COUNT, GOODS_STATUS, SELL_ENROLL_DT, 
		NVL((SELECT FILE_PATH||USER_NO||'/'||FILE_NAME FROM "files" F
			WHERE F.GOODS_NO = G.GOODS_NO
			AND FILE_ORDER = 1), '/resources/src/img/basic_profile.png') THUMBNAIL 
		FROM "goods_board" G
		WHERE USER_NO = 1
		AND GOODS_STATUS NOT IN('D', 'B')
		ORDER BY GOODS_STATUS, VIEW_COUNT DESC);

-- 특정 유저 게시글 목록 조회(낮은 가격순)
SELECT USER_NO, CATEGORY_NO, GOODS_TITLE, GOODS_DESCR, GOODS_PRICE, 
		VIEW_COUNT, WISH_COUNT, GOODS_STATUS,
    CASE
        WHEN SYSDATE - SELL_ENROLL_DT < 1/24/60 THEN FLOOR((SYSDATE - SELL_ENROLL_DT) * 24 * 60 * 60) || '초 전'
        WHEN SYSDATE - SELL_ENROLL_DT < 1/24 THEN FLOOR((SYSDATE - SELL_ENROLL_DT) * 24 * 60) || '분 전'
        WHEN SYSDATE - SELL_ENROLL_DT < 1 THEN FLOOR((SYSDATE - SELL_ENROLL_DT) * 24) || '시간 전'
        WHEN SYSDATE - SELL_ENROLL_DT < 30 THEN FLOOR(SYSDATE - SELL_ENROLL_DT) || '일 전'
        WHEN SYSDATE - SELL_ENROLL_DT < 365 THEN FLOOR((SYSDATE - SELL_ENROLL_DT) / 30) || '달 전'
        ELSE FLOOR((SYSDATE - SELL_ENROLL_DT) / 365) || '년 전'
    END SELL_ENROLL_DT, THUMBNAIL
FROM (SELECT USER_NO, CATEGORY_NO, GOODS_TITLE, GOODS_DESCR, GOODS_PRICE, 
		VIEW_COUNT, WISH_COUNT, GOODS_STATUS, SELL_ENROLL_DT, 
		NVL((SELECT FILE_PATH||USER_NO||'/'||FILE_NAME FROM "files" F
			WHERE F.GOODS_NO = G.GOODS_NO
			AND FILE_ORDER = 1), '/resources/src/img/basic_profile.png') THUMBNAIL 
		FROM "goods_board" G
		WHERE USER_NO = 1
		AND GOODS_STATUS NOT IN('D', 'B')
		ORDER BY GOODS_STATUS, GOODS_PRICE);




-- 날짜 계산
SELECT TRUNC(SYSDATE-ENROLL_DT) OPEN_DAY
FROM "users"
WHERE USER_NO = 1;



-- 특정 유저(상점) 거래 후기 조회 (받은 후기)
SELECT REVIEW_NO, SHOP_TITLE, GOODS_TITLE, REVIEW_MESSAGE,
		REVIEW_DT, REVIEW_STARS, NVL(SHOP_PROFILE, '/resources/src/img/basic_profile.png') SHOP_PROFILE
FROM "reviews" R
JOIN "shop" USING(USER_NO)
JOIN "goods_board" B USING(GOODS_NO)
WHERE REVIEW_DEL_FL = 'N'
AND B.USER_NO = 1;


-- 특정 유저(상점) 거래 후기 조회 (쓴 후기)
SELECT REVIEW_NO, GOODS_TITLE, REVIEW_MESSAGE, REVIEW_DT, REVIEW_STARS
FROM "reviews" R
JOIN "goods_board" GB USING(GOODS_NO)
WHERE REVIEW_DEL_FL = 'N'
AND R.USER_NO = 6;


-- 판매 완료 상품 조회
SELECT COUNT(*)
FROM "goods_board"
WHERE GOODS_STATUS = 'E'
AND USER_NO = 1;


-- 구매 확정 시 판매 후기 작성 가능 게시글로 추가
INSERT INTO "transaction_list" VALUES(7, 8);
INSERT INTO "transaction_list" VALUES(11, 9);
INSERT INTO "transaction_list" VALUES(6, 10);
INSERT INTO "transaction_list" VALUES(11, 14);


-- 후기 작성 가능 목록 조회
SELECT GOODS_TITLE, tl.USER_NO
FROM "transaction_list" tl
JOIN "goods_board" gb ON(tl.GOODS_NO=gb.GOODS_NO)
WHERE tl.USER_NO = 11
AND gb.GOODS_NO NOT IN(SELECT GOODS_NO FROM "reviews" WHERE USER_NO=11 AND REVIEW_DEL_FL='N');



-- 후기 삭제
UPDATE "reviews"
SET REVIEW_DEL_FL = 'Y'
WHERE REVIEW_NO = #{reviewNo};


-- 특정 후기 조회
SELECT REVIEW_NO, r.USER_NO USER_NO, GOODS_TITLE, GOODS_NO, REVIEW_MESSAGE, REVIEW_DT, REVIEW_STARS
FROM "reviews" r
JOIN "goods_board" gb USING(GOODS_NO)
WHERE REVIEW_NO = 8;




--회원 조회
SELECT USER_NO,USER_EMAIL,
  CASE 
    WHEN USER_STATUS = 'A' THEN '정상'
    WHEN USER_STATUS = 'B' THEN '블락'
    WHEN USER_STATUS = 'C' THEN '탈퇴'
  END AS USER_STATUS
  ,ENROLL_DT
FROM "users" ;

SELECT GOODS_NO,USER_NO,GOODS_TITLE
	,TO_CHAR(SELL_ENROLL_DT, 'YYYY-MM-DD') SELL_ENROLL_DT,VIEW_COUNT
	,CASE
		WHEN GOODS_STATUS = 'A' THEN '정상'
		WHEN GOODS_STATUS = 'B' THEN '블라인드'
		WHEN GOODS_STATUS = 'D' THEN '삭제'
		WHEN GOODS_STATUS = 'E' THEN '판매완료'
		WHEN GOODS_STATUS = 'R' THEN '예약중'
	END
FROM "goods_board"
ORDER BY GOODS_NO DESC;
-- 키워드 조회
SELECT KEYWORD_NO, USER_NO, KEYWORD_TITLE, CREATE_DT  
FROM "notification_keywords"
WHERE USER_NO = 1;


-- 키워드 삭제 
DELETE FROM "notification_keywords" 
WHERE USER_NO = 1
AND KEYWORD_NO = 1;

SELECT * FROM "goods_board"
ORDER BY GOODS_NO;



-- 팔로우 기능
INSERT INTO "follow" VALUES(1, 3);

-- 언팔로우 기능
DELETE FROM "follow" 
WHERE ACTIVE_USER_NO = 1
AND PASSIVE_USER_NO = 5;

-- 팔로우 유무 조회
SELECT COUNT(*) FROM "follow" 
WHERE ACTIVE_USER_NO = 4
AND PASSIVE_USER_NO = 1;

-- 팔로우 리스트 조회
SELECT ACTIVE_USER_NO, PASSIVE_USER_NO, SHOP_TITLE, SHOP_INFO, NVL(SHOP_PROFILE, '/resources/src/img/basic_profile.png') SHOP_PROFILE
FROM "follow" 
JOIN "shop" s ON(s.USER_NO = PASSIVE_USER_NO)
WHERE ACTIVE_USER_NO = 3;

-- 팔로우 리스트 조회
SELECT ACTIVE_USER_NO, PASSIVE_USER_NO, SHOP_TITLE, SHOP_INFO, NVL(SHOP_PROFILE, '/resources/src/img/basic_profile.png') SHOP_PROFILE, 
	(SELECT COUNT(*) FROM "follow" 
	WHERE ACTIVE_USER_NO = 1
	AND PASSIVE_USER_NO = f.PASSIVE_USER_NO) FOLLOW_YOU
FROM "follow" f
JOIN "shop" s ON(s.USER_NO = PASSIVE_USER_NO)
WHERE ACTIVE_USER_NO = 3;


-- 팔로우 리스트 조회
SELECT ACTIVE_USER_NO, PASSIVE_USER_NO, SHOP_TITLE, SHOP_INFO, NVL(SHOP_PROFILE, '/resources/src/img/basic_profile.png') SHOP_PROFILE, 
	(SELECT COUNT(*) FROM "follow" 
	WHERE ACTIVE_USER_NO = #{loginUserNo}
	AND PASSIVE_USER_NO = #{passiveUserNo}) FOLLOW_YOU
FROM "follow" 
JOIN "shop" s ON(s.USER_NO = PASSIVE_USER_NO)
JOIN "users" u ON(u.USER_NO = PASSIVE_USER_NO)
WHERE ACTIVE_USER_NO = #{shopUserNo};

SELECT * FROM "goods_board" 
WHERE USER_NO = 4;



-- 팔로워 리스트 조회
SELECT ACTIVE_USER_NO, PASSIVE_USER_NO, SHOP_TITLE, SHOP_INFO, SHOP_PROFILE
FROM "follow" 
JOIN "shop" s ON(s.USER_NO = ACTIVE_USER_NO)
JOIN "users" u ON(u.USER_NO = ACTIVE_USER_NO)
WHERE PASSIVE_USER_NO = 3;

-- 팔로워 리스트 조회
SELECT ACTIVE_USER_NO, PASSIVE_USER_NO, SHOP_TITLE, SHOP_INFO, USER_IMG,
	(SELECT COUNT(*) FROM "follow" 
	WHERE ACTIVE_USER_NO = 1
	AND PASSIVE_USER_NO = f.ACTIVE_USER_NO) FOLLOW_YOU
FROM "follow" f
JOIN "shop" s ON(s.USER_NO = ACTIVE_USER_NO)
JOIN "users" u ON(u.USER_NO = ACTIVE_USER_NO)
WHERE PASSIVE_USER_NO = 3;


-- 탈퇴 시 팔로우 리스트 삭제
DELETE FROM "follow"
WHERE ACTIVE_USER_NO = 10;


SELECT * FROM "follow";
--관리자 문의사항 글 읽어오기
	SELECT QNA_TITLE,QNA_TYPE,USER_NO,
		TO_CHAR(QNA_ENROLL_DATE,'YYYY-MM-DD') QNA_ENROLL_DATE, QNA_CONTENT 
	FROM "qna"
	WHERE QNA_NO = 1;

SELECT * FROM "notice";

INSERT INTO "notice"
VALUES (SEQ_NOTICE_NO.NEXTVAL,'뉴세컨마켓 공지입니다.',
		'안녕하세요. 관리자입니다.새 공지 올려요.',DEFAULT,10);

COMMIT;



SELECT * FROM "files";


COMMIT;

SELECT USER_NO, SHOP_TITLE, SHOP_PROFILE FROM "shop"
JOIN "users" USING(USER_NO);

SELECT * FROM "users";

ALTER TABLE "shop" ADD SHOP_PROFILE VARCHAR2(400);
COMMENT ON COLUMN "shop"."SHOP_PROFILE" IS '상점 프로필';

SELECT * FROM "shop";
COMMIT;

UPDATE "shop" SET SHOP_PROFILE = NULL;

/* 리뷰 수정 */
UPDATE "reviews" SET REVIEW_MESSAGE = #{reviewMessage}, REVIEW_STARS = #{reviewStars}
WHERE REVIEW_NO = #{reviewNo}
;

DELETE FROM "reviews" WHERE REVIEW_DEL_FL = 'Y';

COMMIT;

-- 게시글 검색
SELECT * FROM(
			SELECT ROW_NUMBER() OVER (ORDER BY SELL_ENROLL_DT DESC) AS NUM, GOODS_NO , USER_NO , CATEGORY_NO , GOODS_TITLE , GOODS_PRICE, SELL_ENROLL_DT,
				(SELECT FILE_PATH||USER_NO||'/'||FILE_NAME FROM "files" F
				WHERE F.GOODS_NO = G.GOODS_NO
				AND FILE_ORDER = 1) THUMBNAIL
			FROM "goods_board" G
			JOIN "shop" USING (USER_NO)
			WHERE GOODS_STATUS IN ('A','E','R')
				AND (GOODS_TITLE || GOODS_DESCR) LIKE '%프라이탁%'
			ORDER BY SELL_ENROLL_DT DESC)
		WHERE NUM BETWEEN 12 AND 23
		ORDER BY NUM;


SELECT * FROM "goods_board" gb ;

SELECT * FROM "files";

SELECT * FROM "shop";


ROLLBACK;

SELECT * FROM "notifications";

SELECT SYSDATE FROM DUAL;

-- 키워드 개수 조회
SELECT COUNT(*) FROM "notification_keywords" WHERE USER_NO = 1;


-- (알림 리스트 INSERT 후)알림 조회 + sender 회원의 shop정보
SELECT NOTIFICATION_NO, n.USER_NO TARGET_NO, SENDER_NO, NOTIFICATION_MESSAGE, READ_OR_NOT, NOTIFICATION_CREATE_DT, NOTIFICATION_TYPE, 
	SHOP_TITLE, SHOP_INFO, SHOP_PROFILE
FROM "notifications" n
JOIN "shop" s ON(SENDER_NO=s.USER_NO);


INSERT INTO "notifications" VALUES(SEQ_NOTIFICATION_NO.NEXTVAL, 5, 1, '님께서 회원님을 팔로우하였습니다.', DEFAULT, DEFAULT, 'F');

DELETE FROM "notifications"
WHERE SENDER_NO=1;

COMMIT;


SELECT NOTIFICATION_NO, n.USER_NO TARGET_NO, SENDER_NO, NOTIFICATION_MESSAGE, READ_OR_NOT, NOTIFICATION_CREATE_DT, NOTIFICATION_TYPE, 
			SHOP_TITLE, SHOP_INFO, NVL(SHOP_PROFILE, '/resources/src/img/basic_profile2.png') SHOP_PROFILE, NOTIFICATION_URL
		FROM "notifications" n
		JOIN "shop" s ON(SENDER_NO=s.USER_NO)
ORDER BY NOTIFICATION_CREATE_DT DESC;


-- 키워드 포함
-- 포함되어 있지 않으면 0
SELECT (SELECT INSTR(GOODS_TITLE, '햄토리', 1) FROM DUAL) AS COUNT
FROM "goods_board"
WHERE GOODS_NO = 3;



-- REGEXP_LIKE, LISTAGG 함수 이용
SELECT GOODS_NO, GOODS_TITLE, USER_NO 
FROM "goods_board"
WHERE REGEXP_LIKE(GOODS_TITLE, 
   (SELECT LISTAGG(KEYWORD_TITLE,'|') WITHIN GROUP(ORDER BY KEYWORD_TITLE) A FROM "notification_keywords")
);

-- EXISTS, REGEXP_LIKE, 상관 서브쿼리 이용
SELECT GOODS_NO, GOODS_TITLE FROM "goods_board"
WHERE EXISTS (SELECT 1 FROM "notification_keywords" WHERE REGEXP_LIKE("goods_board".GOODS_TITLE, KEYWORD_TITLE))
;

SELECT g.GOODS_NO, g.GOODS_TITLE, nk.KEYWORD_TITLE
FROM "goods_board" g
WHERE EXISTS (
  SELECT 1
  FROM "notification_keywords" nk
  WHERE REGEXP_LIKE(g.GOODS_TITLE, nk.KEYWORD_TITLE)
);

SELECT g.GOODS_NO, g.GOODS_TITLE, nk.KEYWORD_TITLE
FROM goods_board g
WHERE EXISTS (
  SELECT 1
  FROM notification_keywords nk
  WHERE REGEXP_LIKE(g.GOODS_TITLE, nk.KEYWORD_TITLE)
) nk;

SELECT * FROM "goods_board";





-- senderNo == targetNo 인 경우에는 제외
SELECT g.GOODS_NO, g.GOODS_TITLE, nk.KEYWORD_TITLE, nk.USER_NO TARGET_NO, g.USER_NO SENEDER_NO
FROM "goods_board" g, "notification_keywords" nk
WHERE REGEXP_LIKE(g.GOODS_TITLE, nk.KEYWORD_TITLE)
AND g.USER_NO != nk.USER_NO
AND GOODS_NO = 13;


SELECT nk.USER_NO TARGET_NO, g.USER_NO SENDER_NO, 
		 nk.KEYWORD_TITLE || '^^' || g.GOODS_TITLE NOTIFICATION_MESSAGE, 
		'/goods/'||g.GOODS_NO NOTIFICATION_URL, 'K' NOTIFICATION_TYPE, 					
		NVL((SELECT FILE_PATH||g.USER_NO||'/'||FILE_NAME FROM "files" f
			WHERE f.GOODS_NO = g.GOODS_NO 
			AND FILE_ORDER = 1), '/resources/src/img/basic_profile.png') THUMBNAIL  
FROM "goods_board" g, "notification_keywords" nk
WHERE REGEXP_LIKE(g.GOODS_TITLE, nk.KEYWORD_TITLE)
AND g.USER_NO != nk.USER_NO
AND GOODS_NO = 250
AND GOODS_STATUS NOT IN('D', 'B');

SELECT * FROM "files" WHERE GOODS_NO  = 253;
UPDATE "files" SET FILE_ORDER = 1 WHERE GOODS_NO 


UPDATE "goods_board" SET GOODS_STATUS = 'E'
WHERE GOODS_NO IN (202, 199, 189, 188);



SELECT * FROM "files" 
WHERE GOODS_NO = 250;

UPDATE "files"
SET FILE_ORDER = 1
WHERE GOODS_NO = 9;
COMMIT;

SELECT G.GOODS_NO GOODS_NO, USER_NO, CATEGORY_NO, GOODS_TITLE, GOODS_DESCR, GOODS_PRICE, 
				VIEW_COUNT, WISH_COUNT, GOODS_STATUS, SELL_ENROLL_DT, 
				NVL((SELECT FILE_PATH||USER_NO||'/'||FILE_NAME FROM "files" F
					WHERE F.GOODS_NO = G.GOODS_NO
					AND FILE_ORDER = 1), '/resources/src/img/basic_profile.png') THUMBNAIL 
				FROM "goods_board" G
				WHERE USER_NO = 1
				AND GOODS_STATUS NOT IN('D', 'B');


SELECT NOTIFICATION_NO, TARGET_NO, SENDER_NO, NOTIFICATION_MESSAGE, READ_OR_NOT, 
					
    CASE
        WHEN SYSDATE - NOTIFICATION_CREATE_DT < 1/24/60 THEN '방금 전'
        WHEN SYSDATE - NOTIFICATION_CREATE_DT < 1/24 THEN FLOOR((SYSDATE - NOTIFICATION_CREATE_DT) * 24 * 60) || '분 전'
        WHEN SYSDATE - NOTIFICATION_CREATE_DT < 1 THEN FLOOR((SYSDATE - NOTIFICATION_CREATE_DT) * 24) || '시간 전'
        WHEN SYSDATE - NOTIFICATION_CREATE_DT < 30 THEN FLOOR(SYSDATE - NOTIFICATION_CREATE_DT) || '일 전'
        WHEN SYSDATE - NOTIFICATION_CREATE_DT < 365 THEN FLOOR((SYSDATE - NOTIFICATION_CREATE_DT) / 30) || '달 전'
        ELSE FLOOR((SYSDATE - NOTIFICATION_CREATE_DT) / 365) || '년 전'
    END NOTIFICATION_CREATE_DT, 
 
	
	NOTIFICATION_TYPE, SHOP_TITLE, SHOP_PROFILE, NOTIFICATION_URL, GOODS_THUMBNAIL
FROM (SELECT NOTIFICATION_NO, n.USER_NO TARGET_NO, SENDER_NO, NOTIFICATION_MESSAGE, READ_OR_NOT, NOTIFICATION_CREATE_DT, NOTIFICATION_TYPE, SHOP_TITLE,
		NVL(SHOP_PROFILE, '/resources/src/img/basic_profile2.png') SHOP_PROFILE, NOTIFICATION_URL, GOODS_THUMBNAIL
		FROM "notifications" n
		JOIN "shop" s ON(SENDER_NO=s.USER_NO)
		WHERE n.USER_NO = 1
		ORDER BY NOTIFICATION_CREATE_DT DESC);


DELETE FROM "notifications"
WHERE NOTIFICATION_NO BETWEEN 54 AND 59;

SELECT * FROM "notifications";
DELETE FROM "notifications"
WHERE NOTIFICATION_MESSAGE LIKE '%인스탁스%';
COMMIT;

-- 키워드 알림도 INSERT 해줘야됨, 그전애!!! 키워드 알림 보내기 성공 후에 구현해야돼...
-- 키워드 알림 리스트 받아오기
UPDATE "notifications" 
SET THUMB_NAIL = '/resources/src/user/1/20230525104347_33214.jpg'
WHERE NOTIFICATION_NO = 99;
COMMIT;

SELECT * FROM "files"
WHERE GOODS_NO = 260;




=======
SELECT * FROM "qna";

INSERT INTO "qna"
VALUES (SEQ_QNA_NO.NEXTVAL,USER_NO,QNA_TITLE,QNA_CONTENT,QNA_ENROLL_DATE,DEFAULT,DEFAULT,'T','거래신고');

INSERT INTO "qna"
VALUES (SEQ_QNA_NO.NEXTVAL,'1','사기당한듯','사기당한듯..신고할게요',SYSDATE,DEFAULT,DEFAULT,'T','거래신고');


--위시
SELECT * FROM "wish_lists";

  SELECT * FROM "wish_lists"
   WHERE USER_NO = '1';
   
  
  SELECT ROW_NUMBER() OVER (ORDER BY SELL_ENROLL_DT DESC) AS NUM,GOODS_NO , GOODS_TITLE ,
			(SELECT FILE_PATH||USER_NO||'/'||FILE_NAME FROM "files" F
			WHERE F.GOODS_NO = G.GOODS_NO
			AND FILE_ORDER = 1) THUMBNAIL
		FROM "goods_board" G
		JOIN "shop" USING (USER_NO);
		



SELECT ROW_NUMBER() OVER (ORDER BY WISH_NO DESC) AS NUM,WISH_NO,W.GOODS_NO,USER_NO,
    (SELECT FILE_PATH||USER_NO||'/'||FILE_NAME FROM "files" F
     WHERE F.GOODS_NO = W.GOODS_NO
     AND FILE_ORDER = 1) THUMBNAIL
FROM "wish_lists" W
WHERE USER_NO = '14';
		
SELECT *
FROM "users"
WHERE "USER_EMAIL" LIKE '%dd%'
   OR "USER_NO" LIKE '%dd%'
   OR "USER_NICKNAME" LIKE '%dd%';


SELECT *
FROM "files" 
WHERE GOODS_NO = '222';

SELECT * FROM "shop"
WHERE SHOP_TITLE = '떡볶이먹고싶다';

SELECT * FROM "users";

UPDATE "users"
SET USER_STATUS ='A'
WHERE USER_NO='36';

-- ACTIVE_USER_NO => TARGET_NO
-- PASSIVE_USER_NO => SENDER_NO
SELECT * FROM "users";
SELECT * FROM "goods_board";
SELECT * FROM "follow";

-- 팔로우한 상점 새글 알림
SELECT f.ACTIVE_USER_NO TARGET_NO, f.PASSIVE_USER_NO SENDER_NO, SHOP_TITLE, 
		NVL(SHOP_PROFILE, '/resources/src/img/basic_profile2.png') SHOP_PROFILE, 'N' NOTIFICATION_TITLE,
		(SELECT GOODS_TITLE FROM "goods_board" WHERE GOODS_NO = 1 AND GOODS_STATUS NOT IN('D', 'B')) || '^^님께서 새로운 상품을 게시하였습니다.' NOTIFICATION_MESSAGE, 
		'/goods/'|| 1 NOTIFICATION_URL
FROM "follow" f
JOIN "shop" s ON(s.USER_NO = f.PASSIVE_USER_NO)
WHERE f.PASSIVE_USER_NO = 2
AND f.ACTIVE_USER_NO != f.PASSIVE_USER_NO;

SELECT * FROM "notifications";
DELETE FROM "notifications" n 
WHERE NOTIFICATION_NO = 103;
COMMIT;

SELECT NOTICE_NO,NOTICE_TITLE,NOTICE_CONTENT,TO_CHAR(NOTICE_ENROLL_DATE, 'YYYY-MM-DD') AS NOTICE_ENROLL_DATE,NOTICE_VIEWCOUNT
	FROM "notice"
	WHERE NOTICE_FL = 'Y'
	ORDER BY NOTICE_NO DESC;

<<<<<<< HEAD
UPDATE "notice" 
SET NOTICE_FL = 'N'
WHERE NOTICE_NO ='10';

SELECT * FROM "qna";

SELECT * FROM "goods_board";

UPDATE "goods_board"
SET GOODS_STATUS ='A'
WHERE GOODS_NO ='279';
=======
SELECT * FROM "goods_board"
ORDER BY GOODS_NO DESC;

DELETE FROM "goods_board"
WHERE GOODS_NO BETWEEN 263 AND 274;

DELETE FROM "files"
WHERE GOODS_NO BETWEEN 263 AND 274;


SELECT * FROM "shop";

SELECT 2 SENDER_NO, USER_NO TARGET_NO, '[' || GOODS_TITLE || ']' || '에 새로운 후기가 등록되었습니다.' NOTIFICATION_MESSAGE, 'P' NOTIFICATION_TYPE, 
	'/shop/' || USER_NO NOTIFICATION_URL
FROM "goods_board" 
WHERE GOODS_NO = 1;


SELECT * FROM "reviews";
SELECT * FROM "transaction_list";

SELECT tl.USER_NO buyer, gb.USER_NO seller FROM "transaction_list" tl
JOIN "goods_board" gb
WHERE 


COMMIT;

SELECT * FROM "goods_board" gb WHERE GOODS_TITLE = '나이키 후드집업 M';

SELECT * FROM "users" u WHERE USER_NO = 9;

DELETE FROM "reviews" r WHERE REVIEW_NO = 10;


UPDATE "notifications" 
SET READ_OR_NOT = 'Y'
WHERE NOTIFICATION_NO IN 
	(SELECT NOTIFICATION_NO FROM "notifications" WHERE READ_OR_NOT = 'N' AND USER_NO = ${userNo})

SELECT * FROM "qna";

UPDATE "qna"
SET QNA_DELETE_FL
WHERE QNA_NO ='61';


INSERT INTO BOARD_LIKE (BOARD_IDX, USER_IDX)
VALUES (11, 13)
WHERE NOT EXISTS 
(SELECT BOARD_LIKE_IDX FROM BOARD_LIKE WHERE BOARD_IDX = 11 AND USER_IDX = 13)